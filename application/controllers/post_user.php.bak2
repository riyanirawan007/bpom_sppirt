<?php
/** 
*	Author		: Hifshan Riesvicky
* 	From		: Gunadarma University
*	Filename	: post_user.php
*/

class Post_user extends APP_Controller{
	/**
	* Function __construct (GET)
	* This file provided for auth controller
	* Function __construct for initialize login view
	* @return void 
	*/
	public function __construct(){
		// Initialize home
		parent::__construct();
		$this->load->helper('captcha');
		$this->load->library('MyPHPMailer');
		$this->load->model('auth');
	}
		
	/**
	* Function postLogIn (POST)
	* This function will post the LogIn parameter
	* into the model and check out
	* the raw data inside database
	* @return void 
	*/
	public function postLogIn(){
		// Load form and url helper to use form validation
		$this->load->helper(array('form', 'url'));
		$this->load->library('form_validation');

		// this statements are about username and password major rules
		$this->form_validation->set_rules('uname', 'Username', 'required|min_length[4]');
		$this->form_validation->set_rules('password', 'Password', 'required');
		$this->form_validation->set_rules('captcha', 'captcha', 'required|min_length[5]');
	    if ($this->input->post('captcha') != $this->session->userdata('captcha_str')) // jika captcha salah
	    {
	        echo '
					<script>
					alert("Captcha is incorrect, please try again");
					window.location = "'.base_url().'home/index";
					</script>
					';   
	    }
	    else // jika captcha benar
	    {
	       // if validator rules are rejected by user
		if ($this->form_validation->run() == FALSE)	
		{
		    
			// rejected rule occurs an error. so this statement initialize the error message into session called errors
			$this->session->set_flashdata('errors', validation_errors());
			// get back into user login page and show the error validator message
			redirect('home/index');
		
		   
		}
		
		else
		{
			// check login statement into auth model whether both of username and password are match or not
			$check 	= $this->checkLogIn();
			
			//print_r($check); exit;
			// if check login statement doesn't return NULL value, in other words, both username and password have matched
			
			if($check != 0)
			{
			    
			    
			    
			    
				// User token initialize to session data
				
				$word = array_merge(range('1', '9'), range('A', 'Z'));
				$acak = shuffle($word);
				$str  = substr(implode($word), 0, 5);
				$data	= array(
					'user_token'			=> 1,
					'user_id'				=> $check[0]->id_user,
					'user_name'			=> $check[0]->username,
					'user_segment'		=> $check[0]->id_r_hak_akses,
					'code'				=> $check[0]->code, //Dinkes 1 Provinsi, Dinkes 2 Kota
					'user_right_access'	=> $this->auth->identifyRightAccess($check[0]->id_r_hak_akses),
					'login'					=> TRUE,
					'captcha_str'			=>$str
				);
				// Set user data
				$this->session->set_userdata($data);
				if($this->addCookie())
				{
					// set information about user successful message in order to login event
					$this->session->set_flashdata('message', '<div class="alert alert-info"><strong>Awesome! </strong> You have entered this admin site</div>');
					// Furthermore, user redirected by system to home which equal to user segment				
					redirect('home/index');
				}
				// if($this->input->post('captcha') != $this->session->userdata('captcha_str')){
				    
				// }
			
			    
			
			}
			
			
			// set information about user error message in order to login event
			$this->session->set_flashdata('message', '<div class="alert alert-danger"><strong>Caution! </strong> You could not enter our system. your username or password doesn`t match </div>');
			// Else redirect into login
			redirect('home/index');
		} 
	    }
		
		
	}
		
	/**
	* Function postRegister (POST)
	* This function will post the register 
	* parameter into database and collect it
	* @return void 
	*/	
	public function postRegister(){
			// Load form and url helper to use form validation
			$this->load->helper(array('form', 'url'));
			$this->load->library('form_validation');
	
			// this statements are about username and password major rules
			$this->form_validation->set_rules('uname', 'Username', 'required|min_length[4]|max_length[30]');
			$this->form_validation->set_rules('password', 'Password', 'required|matches[password_again]');
			$this->form_validation->set_rules('password_again', 'Password Confirmation', 'required');
			$this->form_validation->set_rules('hak_akses', 'Right Access', 'required');
		
			// if validator rules are rejected by user
			if ($this->form_validation->run() == FALSE)	{
				// rejected rule occurs an error. so this statement initialize the error message into session called errors
				$this->session->set_flashdata('errors', validation_errors());
				// get back into user login page and show the error validator message
				redirect('home/register');
			}
			else	{
				// If user has been registered into database
				if($this->auth->register()){
					// Set the user info to shows up within user interface later
					$this->session->set_flashdata('message', '<div class="alert alert-info"><strong>Awesome! </strong> You have registered new user into database</div>');
				}else{
					// set information about user error message in order to login event
					$this->session->set_flashdata('message', '<div class="alert alert-danger"><strong>Caution! </strong> You could not register some user. Please try again later</div>');
				}
				// if register has done, redirect into register page
				redirect('home/register');	
			}
	}
	
	/**
	* Function checkLogIn (POST)
	* This function shall check the login user state
	* into auth model
	* and return the result as array
	* @return array or integer
	*/
	public function checkLogIn(){
		$check 		= $this->auth->checkLogIn();	
		
		// if check login returns 1 row
		if($check->num_rows())
			return $check->result();
		// Else return NULL
		return 0;
	}
	
	/**
	* Function  postEditUser (POST)
	* This function shall post the statements inside
	*  function to edit user's field which has id_user as a hidden variable
	* @return array or integer
	*/
	public function postEditUser(){
			// Hidden input to make sure that's id user has delivered as parameter
			$user 	= $this->input->post('id_user');
			// Load form and url helper to use form validation
			$this->load->helper(array('form', 'url'));
			$this->load->library('form_validation');
	
			// this statements are about username and password major rules
			$this->form_validation->set_rules('uname', 'Username', 'required|min_length[4]|max_length[30]');
			$this->form_validation->set_rules('password', 'Password', 'required|matches[password_again]');
			$this->form_validation->set_rules('password_again', 'Password Confirmation', 'required');
			$this->form_validation->set_rules('hak_akses', 'Right Access', 'required');
		
			// if validator rules are rejected by user
			if ($this->form_validation->run() == FALSE)	{
				// rejected rule occurs an error. so this statement initialize the error message into session called errors
				$this->session->set_flashdata('errors', validation_errors());
				// get back into user editUser page and show the error validator message
				redirect('home/editUser/'.$user);
			}
			else	{
				// If user has been registered into database
				if($this->auth->editUser($user)){
					// Set the user info to shows up within user interface later
					$this->session->set_flashdata('message', '<div class="alert alert-info"><strong>Selamat! </strong> Data berhasil diubah</div>');
				}else{
					// set information about user error message in order to login event
					$this->session->set_flashdata('message', '<div class="alert alert-danger"><strong>Perhatian! </strong> Data gagal diubah</div>');
				}
				// if register has done, redirect into register page
				redirect('home/editUser/'.$user);	
			}
	}
	
	public function cek_email(){
		$cek = $this->db->query("select * from tabel_login_user where email = '".$this->input->post('email')."'")->result_array();
		if(count($cek)==0){
			$this->session->set_flashdata('errors', '<div class="alert alert-danger">Maaf! Email tidak terdaftar </div>');
		} else {
			// Configure email library
			
			$name = 'Admin Sistem Pelaporan Keamanan Pangan Online';
			$subject = 'Lupa Password Sistem Pelaporan Keamanan Pangan Online';
			$receiver_email = $this->input->post('email');
			
			foreach($cek as $row){
				$username = $row['username'];
				$password = $row['password'];
			}
			$message = "Halo, $username<br><br>Kami telah menerima permintaan password Anda pada sistem keamanan pangan online. berikut data akun Anda :<br>Username : $username <br>Password : $password <br><br>Terima kasih atas partisipasi Anda.";
			
			include("send_email.php");
			
		}
		
		
		redirect('home/lupa_password');	
	}
	
	public function send_email()
	{
	    
	    $receiver_email = $this->input->post('email')!=null?$this->input->post('email'):'naufalfahmie@gmail.com';
	    $mail = new PHPMailer(true);                            
    
        try
        {
        $mail->isSMTP();                                      
        $mail->Host       = 'smtp.gmail.com';  
        $mail->SMTPAuth   = true;                               
        $mail->Username   = 'kontakbpom@gmail.com';            
        $mail->Password   = 'kontakbp0m';                          
        $mail->SMTPSecure = 'tls';                           
        $mail->Port       = 587;                                  
        $mail->CharSet    = 'iso-8859-1';
        $mail->SMTPOptions=
        array('tls' => array(
            'verify_peer' => false,
            'verify_peer_name' => false,
            'allow_self_signed' => true));
        
        //Recipients
        
        $mail->setFrom('kontakbpom@gmail.com', 'CONTACT SPPIRT');
        $mail->addAddress($receiver_email, 'ADMIN SPPIRT');   
    
        //Content
        $mail->isHTML(true);                            
        $mail->Subject = 'Here is the subject';
        $mail->Body    = "<div style='background-color:#fff;margin:0 auto 0 auto;padding:30px 0 30px 0;color:#fffff;font-size:13px;line-height:20px;font-family:'Helvetica Neue',Arial,sans-serif;text-align:left;''>
    				<table style='width:550px;'>
    				<tbody>
    				<tr>
    				<td colspan='3'>
    				Dear <b>a</b>
    				</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>You recently requested to reset your password for your SPPIRT account. Use button to reset it.</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>
    				<a style='display:inline-block;text-decoration:none;padding:15px 20px;background-color:#fffff;border:1px solid #009688;border-radius:3px;color:#FFF;font-weight:bold;' href='' target='_blank'>Reset Password</a>. 
    				</td>
    				</tr>
    				<br>
    				<br>
    				<tr>
    				<td colspan='3'>Thank you and warmest regard</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>If you did not request a password reset, please ignore this email or contact support If you have any question please contact us at</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>Email</td>
    				</tr>
    				<tr>
    				<td colspan='3'>sppirt@gmail.com</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>Telephone</td>
    				</tr>
    				<tr>
    				<td colspan='3'>+62 21 7486 9222</td>
    				</tr>
    				<tr>
    				<td colspan='3'>+62 21 2985 7431</td>
    				</tr>
    				<br>
    				<tr>
    				<td colspan='3'>Fax</td>
    				</tr>
    				<tr>
    				<td colspan='3'>+62 21 2985 7431</td>
    				</tr>
    				<tr>
    				<td colspan='3'>+62 21 2985 7201</td>
    				</tr>
    				</tbody>
    				</table>
    				</div>";
    			
    			if(!$mail->send())
    			{
            		$this->session->set_flashdata('errors', '<div class="alert alert-danger">Gagal mengirim email : '.$mailer->ErrorInfo.'</div>');
            		//echo 'Error sending mail : ' . $mailer->ErrorInfo;
            	} 
            	else 
            	{
            		$this->session->set_flashdata('message', '<div class="alert alert-info">Data akun telah dikirim ke Email Anda</div>');
            	}
    	
            
        }
    	catch (Exception $e)
    	{
            echo 'Message could not be sent.';
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        }
    }
}
?>